name: Test and build

on:
  push:
  release:
    types:
      - published

jobs:
  style_check:
    name: Check code style
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Setup Python 3.9
        uses: actions/setup-python@v1
        with:
          python-version: "3.9"
      - name: Cache pip
        uses: actions/cache@v1
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements*.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: Install tox
        run: pip install tox
      - name: Run tox linter, formatter and isort check
        run: tox -elint

  unittests:
    name: Run unittests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Setup Python 3.9
        uses: actions/setup-python@v1
        with:
          python-version: "3.9"
      - name: Setup Python 3.10
        uses: actions/setup-python@v1
        with:
          python-version: "3.10"
      - name: Cache pip
        uses: actions/cache@v1
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements*.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: Install tox
        run: pip install tox
      - name: Run tox unittests
        run: tox -- --html=pytest_report.html --self-contained-html --cov=todoms
      - name: Test building docs
        run: tox -e docs
      - name: Upload test results
        uses: actions/upload-artifact@v2
        with:
          name: pytest-results
          path: pytest_report.html
        if: ${{ always() }}

  build:
    name: Build package
    runs-on: ubuntu-latest
    needs: [style_check, unittests]
    steps:
      - uses: actions/checkout@v2
      - name: Setup Python 3.9
        uses: actions/setup-python@v1
        with:
          python-version: "3.9"
      - name: Cache pip
        uses: actions/cache@v1
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements*.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: Install & upgrade building tools
        run: pip install --upgrade setuptools wheel
      - name: Build package
        run: python setup.py sdist bdist_wheel
      - name: Publish package in PyPI on release
        if: github.event_name == 'release' && github.event.action == 'published'
        uses: pypa/gh-action-pypi-publish@v1.2.2
        with:
          user: __token__
          password: ${{ secrets.pypi_test_token }}
      - name: Store package as artifacts
        uses: actions/upload-artifact@v2
        with:
          name: package-distributions
          path: dist/*
        if: ${{ always() }}
